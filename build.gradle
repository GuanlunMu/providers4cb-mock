buildscript {
	ext {
		springBootVersion = '1.3.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
    id 'net.researchgate.release' version '2.3.4'
    id "org.sonarqube" version '1.1'
}

apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'checkstyle'
apply plugin: 'net.researchgate.release'
apply plugin: 'org.sonarqube'

jar {
	baseName = 'providers4cb-mock'
	version = "${version}"
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web'){
		// We will be using Undertow for our HTTP container so we don't need Tomcat
		exclude module: 'spring-boot-starter-tomcat'
	}
	// Undertow will serve as the application's HTTP container
	compile('org.springframework.boot:spring-boot-starter-undertow')
	compile('com.mangofactory:swagger-springmvc:1.0.2')
	//Test dependencies
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('cglib:cglib-nodep:3.2.0')
	testCompile('com.jayway.jsonpath:json-path:2.1.0')
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}


File checkstyleConfigFile = file("${project.projectDir}/src/main/resources/config/checkstyle/checkstyle.xml")

checkstyle {
    configFile = checkstyleConfigFile
    ignoreFailures = true
}

sonarqube {
    properties {
        property "sonar.host.url", "http://jenkins.caringbridge.org:9000/"
        property "sonar.projectKey", "cb-campaing-microservice"
        property "sonar.projectDescription", "Campaigns micro-service application to communicate with external founding partners"
        property "sonar.projectVersion", "${version}"
    }
}


springBoot {
    executable = true
}